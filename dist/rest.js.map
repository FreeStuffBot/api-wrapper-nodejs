{
  "version": 3,
  "sources": ["../src/rest.ts"],
  "sourcesContent": [
    "import { getCompatibility, getUa } from './const' with { type: 'macro' };\n\nimport axios from 'axios';\nimport { FsbStaticApiV2EventList, FsbStaticApiV2ProblemList, FsbStaticApiV2Schema, FsbStaticApiV2SchemaList } from './types';\n\n\ntype Options = {\n  baseUrl?: string,\n};\n\nconst defaultOptions: Options = {\n  baseUrl: 'https://api.freestuffbot.xyz/v2', \n};\n\nexport class RestApiClient {\n\n  private baseUrl: string;\n  private headers: Record<string, string> = {}\n\n  constructor(\n    readonly token: string,\n    readonly options: Options,\n  ) {\n    this.baseUrl = options.baseUrl || defaultOptions.baseUrl;\n    this.headers['Authorization'] = `Bearer ${token}`;\n    this.headers['User-Agent'] = getUa();\n    this.headers['Content-Type'] = 'application/json';\n    this.headers['X-Set-Compatibility-Date'] = getCompatibility();\n  }\n\n  public getPing() {\n    return axios({\n      method: 'GET',\n      headers: this.headers,\n      baseURL: this.baseUrl,\n      url: '/ping',\n    })\n  }\n\n  public readonly static = {\n    getSchemas() {\n      return axios.get<FsbStaticApiV2SchemaList>('/schemas', {\n        headers: this.headers,\n        baseURL: this.baseUrl,\n      })\n    },\n    getSchema(urn: string) {\n      return axios.get<FsbStaticApiV2Schema>(`/schemas/${urn}`, {\n        headers: this.headers,\n        baseURL: this.baseUrl,\n      })\n    },\n    getProblems() {\n      return axios.get<FsbStaticApiV2ProblemList>('/problems', {\n        headers: this.headers,\n        baseURL: this.baseUrl,\n      })\n    },\n    getEvents() {\n      return axios.get<FsbStaticApiV2EventList>('/events', {\n        headers: this.headers,\n        baseURL: this.baseUrl,\n      })\n    },\n  }\n\n}\n"
  ],
  "mappings": ";AAEA;AAQA,IAAM,iBAA0B;AAAA,EAC9B,SAAS;AACX;AAAA;AAEO,MAAM,cAAc;AAAA,EAMd;AAAA,EACA;AAAA,EALH;AAAA,EACA,UAAkC,CAAC;AAAA,EAE3C,WAAW,CACA,OACA,SACT;AAAA,IAFS;AAAA,IACA;AAAA,IAET,KAAK,UAAU,QAAQ,WAAW,eAAe;AAAA,IACjD,KAAK,QAAQ,mBAAmB,UAAU;AAAA,IAC1C,KAAK,QAAQ,gBAAgB;AAAA,IAC7B,KAAK,QAAQ,kBAAkB;AAAA,IAC/B,KAAK,QAAQ,8BAA8B;AAAA;AAAA,EAGtC,OAAO,GAAG;AAAA,IACf,OAAO,MAAM;AAAA,MACX,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,KAAK;AAAA,IACP,CAAC;AAAA;AAAA,EAGa,SAAS;AAAA,IACvB,UAAU,GAAG;AAAA,MACX,OAAO,MAAM,IAA8B,YAAY;AAAA,QACrD,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,MAChB,CAAC;AAAA;AAAA,IAEH,SAAS,CAAC,KAAa;AAAA,MACrB,OAAO,MAAM,IAA0B,YAAY,OAAO;AAAA,QACxD,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,MAChB,CAAC;AAAA;AAAA,IAEH,WAAW,GAAG;AAAA,MACZ,OAAO,MAAM,IAA+B,aAAa;AAAA,QACvD,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,MAChB,CAAC;AAAA;AAAA,IAEH,SAAS,GAAG;AAAA,MACV,OAAO,MAAM,IAA6B,WAAW;AAAA,QACnD,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,MAChB,CAAC;AAAA;AAAA,EAEL;AAEF;",
  "debugId": "489828091226187464756E2164756E21",
  "names": []
}